npm init is a syntax to create the project

install express

instal di json package : npm install --save json-server

sign up to heroku

we have to describes node engine version, in order to telling the hiroku information about the node version

we have to adding the "start" : "node index.js" syntax into the "script" syntax, in order to ordered the hiroku to 
run the "start" syntax first

make .gitignored file, the function is for preventing commit to git for version control, because hiroku will
install the dependencies by itself

ada 2 library yg di instal untuk passport, passport dan passport strategy
strategy harus menggunakan google oauth20 

type of folder: 
1. Route = for routing (link to login, logout, callback)
2. Services = the services provided by server (login, )

for instaling heroku =   npm i -g heroku
making new app =    heroku create 

boiling-scrubland-57661
WebLink => https://boiling-scrubland-57661.herokuapp.com/ 
Repo => https://git.heroku.com/boiling-scrubland-57661.git


befor push we must LOGIN to heroku first
how to create remote repository = git remote add heroku https://git.heroku.com/boiling-scrubland-57661.git
git push heroku master


we have to configure the powershell restriction

googleClientID "we MUST using Capital "ID" to type in our code"

"node index.js" this is the code for run the program

nodemon is module to making server instaling by itself
then edit package json file "dev": "nodemon index.js" in the script for running the program in development mode via "npm run dev"


MongoDB
user : p00gz
Pass : XRiEhfUbrfrA3cI4
connection String : mongodb+srv://p00gz:XRiEhfUbrfrA3cI4@emaily.qrasn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority //ganti password dan username nya

user : aldy
pass : 5g1BVWj5j4Z8WBn2
connection String : 

mongodb+srv://aldy:5g1BVWj5j4Z8WBn2@emaily.qrasn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority
mongodb+srv://aldy:5g1BVWj5j4Z8WBn2@emaily.qrasn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority

install mongoose

create model class in mongoose its equal to create collection in mongodb, 
create model instance in mongoose its equal to create records in mongodb,

to prevent an error, we should'nt using require for continously, so we have to make model class object,
2 argument :
    1. to load Schema into it 
    2. to fetch Schema from it 

before we adding new model instance into database, we must make sure there is no the same instance, 
then we make a query which is asyncronous so we need to handle it with promise
    
//making cookies
- first we must adding serialize and deserialize
- second import cookie-session library
- then import esxpress in index
- determine the last of our cookie in browser and randomly generate cookiekey

//Production
a new database, dont forget to create new user in mongodb for read and write database
mongodb+srv://aldy:XRiEhfUbrfrA3cI4@cluster0.rbjhx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority


GOOGLE OAUTH 2.0 API
- akses google oauth api di https://console.cloud.google.com/
- new project
- Enable API
- Search google+ API
- Klik enable
- Create credential => Oauth client ID

Oauth client Prod
clientID : 7982080818-dagticjnbpgb768rj9atgqacmjdomkfv.apps.googleusercontent.com
Client secret : M20yz-maLrTvLg38xNZOk5gR

buat file config terpisah, antara develpment dan production
.env adalah variable global, 


////Clientside
- install react app inside the server folder, we can create it separately or combine it, 
- we running 2 server, the react server and express server


//for development
- we can run both with different terminal or single by adding script code inside package.json file in server folder but we have to install "concurrently" package, 'npm install --save concurrently' and adding some code 
- we give --prefix client running the script within client package.json folder
- then install http-proxy-middleware for getting correct web address (ex: befor /auth/google), 
    "npm install http-proxy-middleware@2.0.1" inside CLIENT folder/src and then adding "setupProxy.js"
- proxy is use for request data from server address, when we access the frontend then click something or request data from server it will routing to server address

//for development only, there is 2 server running, create-react-app and nodejs/esxpress, after we build from create-react-app, app file will released from create-react-app, making file placed inside nodejs/express server as singleBundle project with server files


ASYNC/AWAIT
- there is a snippet called 'fetch' that works in ES15 and working on certain of web browser version, 
- in ES17 we use async await, and we can use arrow function
- refactoring services/passport.js

Instaling dependencies in client directory "npm install --save redux react-redux react-router-dom"
NOTE: TO RUNNING THE PROGRAM , BACK TO THE SERVER DIRECTORY FIRST

if we found error, it probably because of NPM version, delete package-lock then run NPM install in client directory

client index.js = for data setup, App.js for app setup

in client = npm install --save axios redux-thunk

we using global state management like "redux" and middleware like "thunk" for manage the state

we add "/api/*" STAR symbols berarti setiap setelah route tersebut akan di arahkan ke target di package.json atau di setupProxy.js

if we want to check whether we're login or not, open the console check 4th object it's from axios => data (atribute)

Passport is middleware that handle some authentification stuff, after done it will redirect using res.redirect to another route

//BILLING SYSTEM
we use Stripe.com to handle our payment system, 
we use Stripe checkout React for handling the form within react project, in client dir using library npm install react-stripe-checkout 

- save the publish key and the secret key, and add in environment variable in prod.js file and add to heroku

for making environment variable in client side, react has another methode, we can read in create-react-app documentation we must using REACT_APP_ inside .env.development and .env.production, in the client folder, outside the src folder, .env file will not appear in MAC OS